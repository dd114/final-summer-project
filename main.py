# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'test.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox

from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg, NavigationToolbar2QT as NavigationToolbar
from matplotlib.figure import Figure

import numpy as np
from scipy.fft import rfft, rfftfreq, irfft
from math import sin, cos, sqrt


class MplCanvas(FigureCanvasQTAgg):

    def __init__(self, parent=None, width=5, height=4, dpi=100):
        fig = Figure(figsize=(width, height), dpi=dpi)
        self.axes = fig.add_subplot(111)
        super(MplCanvas, self).__init__(fig)


    def myShow(self):
        self.figure.show()

class Ui_MainWindow(QtWidgets.QMainWindow):

    def __init__(self, *args, **kwargs):
        super(Ui_MainWindow, self).__init__(*args, **kwargs)

        self.sc1 = MplCanvas(self, width=5, height=4, dpi=100)
        # self.sc1.axes.plot([0,1,2,3,4], [10,1,20,3,40])

        # Create toolbar, passing canvas as first parament, parent (self, the MainWindow) as second.
        self.toolbar1 = NavigationToolbar(self.sc1, self)



        self.sc2 = MplCanvas(self, width=5, height=4, dpi=100)
        # self.sc2.axes.plot([0,1,2,3,4], [10,1,20,3,40])

        # Create toolbar, passing canvas as first parament, parent (self, the MainWindow) as second.
        self.toolbar2 = NavigationToolbar(self.sc2, self)


        self.sc3 = MplCanvas(self, width=5, height=4, dpi=100)
        # self.sc3.axes.plot([0,1,2,3,4], [10,1,20,3,40])

        # Create toolbar, passing canvas as first parament, parent (self, the MainWindow) as second.
        self.toolbar3 = NavigationToolbar(self.sc3, self)

        self.x = 530
        self.y = 220
        self.sc1.setFixedSize(self.x, self.y)
        self.sc2.setFixedSize(self.x, self.y)
        self.sc3.setFixedSize(self.x, self.y)


    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1097, 861)

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setEnabled(True)
        self.centralwidget.setMaximumSize(QtCore.QSize(5000, 5000))
        self.centralwidget.setObjectName("centralwidget")

        self.verticalLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(0, 0, 1091, 841))
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")

        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.verticalLayout_3.setSizeConstraint(QtWidgets.QLayout.SetMaximumSize)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")

        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")

        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")

        # self.pushButton = QtWidgets.QPushButton(self.verticalLayoutWidget_2)
        # self.pushButton.setObjectName("pushButton")
        #
        # self.verticalLayout_2.addWidget(self.pushButton)

        # self.textBrowser = QtWidgets.QTextBrowser(self.verticalLayoutWidget_2)
        # self.textBrowser.setObjectName("textBrowser")

        self.verticalLayout_2.addWidget(self.toolbar1)
        self.verticalLayout_2.addWidget(self.sc1)

        self.horizontalLayout.addLayout(self.verticalLayout_2)

        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.gridLayout.setContentsMargins(-1, -1, 0, -1)
        self.gridLayout.setSpacing(7)
        self.gridLayout.setObjectName("gridLayout")

        self.label_11 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_11.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_11.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_11.setObjectName("label_11")

        self.gridLayout.addWidget(self.label_11, 4, 4, 1, 1)

        self.label_10 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_10.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_10.setObjectName("label_10")

        self.gridLayout.addWidget(self.label_10, 4, 1, 1, 1)

        self.lineEdit_9 = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.lineEdit_9.setObjectName("lineEdit_9")

        self.gridLayout.addWidget(self.lineEdit_9, 4, 5, 1, 1)

        self.pushButton_8 = QtWidgets.QPushButton(self.verticalLayoutWidget_2)
        self.pushButton_8.setObjectName("pushButton_8")

        self.gridLayout.addWidget(self.pushButton_8, 7, 5, 1, 1)

        self.lineEdit_7 = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.lineEdit_7.setObjectName("lineEdit_7")

        self.gridLayout.addWidget(self.lineEdit_7, 4, 3, 1, 1)

        self.lineEdit_4 = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.lineEdit_4.setObjectName("lineEdit_4")

        self.gridLayout.addWidget(self.lineEdit_4, 3, 5, 1, 1)

        self.label_3 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_3.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_3.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_3.setObjectName("label_3")

        self.gridLayout.addWidget(self.label_3, 3, 1, 1, 1)

        self.lineEdit_3 = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.lineEdit_3.setObjectName("lineEdit_3")

        self.gridLayout.addWidget(self.lineEdit_3, 3, 3, 1, 1)

        self.label_4 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_4.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_4.setObjectName("label_4")

        self.gridLayout.addWidget(self.label_4, 3, 4, 1, 1)

        self.pushButton_3 = QtWidgets.QPushButton(self.verticalLayoutWidget_2)
        self.pushButton_3.setObjectName("pushButton_3")

        self.gridLayout.addWidget(self.pushButton_3, 7, 4, 1, 1)

        self.horizontalLayout.addLayout(self.gridLayout)

        self.verticalLayout_3.addLayout(self.horizontalLayout)

        self.line_2 = QtWidgets.QFrame(self.verticalLayoutWidget_2)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")

        self.verticalLayout_3.addWidget(self.line_2)

        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")

        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")

        # self.pushButton_2 = QtWidgets.QPushButton(self.verticalLayoutWidget_2)
        # self.pushButton_2.setObjectName("pushButton_2")
        #
        # self.verticalLayout_4.addWidget(self.pushButton_2)

        # self.textBrowser_2 = QtWidgets.QTextBrowser(self.verticalLayoutWidget_2)
        # self.textBrowser_2.setObjectName("textBrowser_2")

        # self.verticalLayout_4.addWidget(self.textBrowser_2)
        self.verticalLayout_4.addWidget(self.toolbar2)
        self.verticalLayout_4.addWidget(self.sc2)

        self.horizontalLayout_2.addLayout(self.verticalLayout_4)
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.gridLayout_2.setContentsMargins(-1, -1, 0, -1)
        self.gridLayout_2.setSpacing(7)
        self.gridLayout_2.setObjectName("gridLayout_2")

        self.label_5 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_5.setObjectName("label_5")

        self.gridLayout_2.addWidget(self.label_5, 0, 0, 1, 1)

        self.lineEdit_5 = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.lineEdit_5.setObjectName("lineEdit_5")

        self.gridLayout_2.addWidget(self.lineEdit_5, 0, 1, 1, 1)

        self.lineEdit_6 = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.lineEdit_6.setObjectName("lineEdit_6")

        self.gridLayout_2.addWidget(self.lineEdit_6, 1, 1, 1, 1)

        self.pushButton_4 = QtWidgets.QPushButton(self.verticalLayoutWidget_2)
        self.pushButton_4.setObjectName("pushButton_4")

        self.gridLayout_2.addWidget(self.pushButton_4, 2, 1, 1, 1)

        self.label_6 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_6.setObjectName("label_6")

        self.gridLayout_2.addWidget(self.label_6, 1, 0, 1, 1)

        self.pushButton_11 = QtWidgets.QPushButton(self.verticalLayoutWidget_2)
        self.pushButton_11.setObjectName("pushButton_11")
        self.gridLayout_2.addWidget(self.pushButton_11, 1, 2, 1, 1)

        self.pushButton_9 = QtWidgets.QPushButton(self.verticalLayoutWidget_2)
        self.pushButton_9.setObjectName("pushButton_9")

        self.gridLayout_2.addWidget(self.pushButton_9, 2, 2, 1, 1)

        self.horizontalLayout_2.addLayout(self.gridLayout_2)

        self.verticalLayout_3.addLayout(self.horizontalLayout_2)

        self.line = QtWidgets.QFrame(self.verticalLayoutWidget_2)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")

        self.verticalLayout_3.addWidget(self.line)

        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")

        self.verticalLayout_5 = QtWidgets.QVBoxLayout()
        self.verticalLayout_5.setObjectName("verticalLayout_5")

        # self.pushButton_5 = QtWidgets.QPushButton(self.verticalLayoutWidget_2)
        # self.pushButton_5.setObjectName("pushButton_5")
        #
        # self.verticalLayout_5.addWidget(self.pushButton_5)

        # self.textBrowser_3 = QtWidgets.QTextBrowser(self.verticalLayoutWidget_2)
        # self.textBrowser_3.setObjectName("textBrowser_3")

        # self.verticalLayout_5.addWidget(self.textBrowser_3)

        self.verticalLayout_5.addWidget(self.toolbar3)
        self.verticalLayout_5.addWidget(self.sc3)

        self.horizontalLayout_3.addLayout(self.verticalLayout_5)

        self.gridLayout_3 = QtWidgets.QGridLayout()
        self.gridLayout_3.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.gridLayout_3.setContentsMargins(-1, -1, 0, -1)
        self.gridLayout_3.setSpacing(7)
        self.gridLayout_3.setObjectName("gridLayout_3")

        self.label_8 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_8.setObjectName("label_8")

        self.gridLayout_3.addWidget(self.label_8, 1, 0, 1, 1)

        self.label_9 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_9.setAlignment(QtCore.Qt.AlignCenter)
        self.label_9.setObjectName("label_9")

        self.gridLayout_3.addWidget(self.label_9, 0, 1, 1, 1)

        self.pushButton_10 = QtWidgets.QPushButton(self.verticalLayoutWidget_2)
        self.pushButton_10.setObjectName("pushButton_10")

        self.gridLayout_3.addWidget(self.pushButton_10, 2, 2, 1, 1)

        self.pushButton_7 = QtWidgets.QPushButton(self.verticalLayoutWidget_2)
        self.pushButton_7.setObjectName("pushButton_7")

        self.gridLayout_3.addWidget(self.pushButton_7, 1, 2, 1, 1)

        # self.pushButton_6 = QtWidgets.QPushButton(self.verticalLayoutWidget_2)
        # self.pushButton_6.setObjectName("pushButton_6")
        #
        # self.gridLayout_3.addWidget(self.pushButton_6, 0, 2, 1, 1)

        self.label_7 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_7.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_7.setObjectName("label_7")

        self.gridLayout_3.addWidget(self.label_7, 0, 0, 1, 1)

        self.lineEdit_8 = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.lineEdit_8.setObjectName("lineEdit_8")

        self.gridLayout_3.addWidget(self.lineEdit_8, 1, 1, 1, 1)

        self.horizontalLayout_3.addLayout(self.gridLayout_3)

        self.verticalLayout_3.addLayout(self.horizontalLayout_3)

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setEnabled(True)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1097, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.addFunctions()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        # self.pushButton.setText(_translate("MainWindow", "PushButton"))
        self.label_11.setText(_translate("MainWindow", "Частота дискретизации"))
        self.label_10.setText(_translate("MainWindow", "Длительность"))
        self.lineEdit_9.setText(_translate("MainWindow", "100"))
        self.lineEdit_9.setPlaceholderText(_translate("MainWindow", "100"))
        self.pushButton_8.setText(_translate("MainWindow", "Сохранить в файл"))
        self.lineEdit_7.setText(_translate("MainWindow", "5"))
        self.lineEdit_7.setPlaceholderText(_translate("MainWindow", "5"))
        self.lineEdit_4.setPlaceholderText(_translate("MainWindow", "signal.txt"))
        self.label_3.setText(_translate("MainWindow", "f(x)="))
        self.lineEdit_3.setPlaceholderText(_translate("MainWindow", "sin(x)+0.3*sin(50*x)+0.7*sin(150*x)"))
        self.lineEdit_3.setText(_translate("MainWindow", "sin(x)+0.3*sin(50*x)+0.7*sin(150*x)"))
        self.label_4.setText(_translate("MainWindow", "Загрузить файл"))
        self.pushButton_3.setText(_translate("MainWindow", "Пересчитать"))
        # self.pushButton_2.setText(_translate("MainWindow", "PushButton"))
        self.label_5.setText(_translate("MainWindow", "В диапазоне"))
        self.lineEdit_5.setPlaceholderText(_translate("MainWindow", "500-1000"))
        self.lineEdit_6.setPlaceholderText(_translate("MainWindow", "0"))
        self.lineEdit_6.setText(_translate("MainWindow", "0"))
        self.pushButton_4.setText(_translate("MainWindow", "Пересчитать"))
        self.pushButton_11.setText(_translate("MainWindow", "Построить IFFT"))
        self.label_6.setText(_translate("MainWindow", "Значение амплитуды"))
        self.pushButton_9.setText(_translate("MainWindow", "Сохранить в файл"))
        # self.pushButton_5.setText(_translate("MainWindow", "PushButton"))
        self.label_8.setText(_translate("MainWindow", "Размер окна"))
        self.label_9.setText(_translate("MainWindow", "Дисперсия = 0"))
        self.pushButton_10.setText(_translate("MainWindow", "Сохранить в файл"))
        self.pushButton_7.setText(_translate("MainWindow", "Пересчитать"))
        # self.pushButton_6.setText(_translate("MainWindow", "Пересчитать"))
        self.label_7.setText(_translate("MainWindow", "Мат ожидание = 0"))
        self.lineEdit_8.setPlaceholderText(_translate("MainWindow", "5"))
        self.lineEdit_8.setText(_translate("MainWindow", "5"))

    def addFunctions(self):
        self.pushButton_3.clicked.connect(self.handlerButton_3)
        self.pushButton_8.clicked.connect(self.handlerButton_8)
        self.pushButton_11.clicked.connect(self.handlerButton_11)
        self.pushButton_4.clicked.connect(self.handlerButton_4)
        self.pushButton_9.clicked.connect(self.handlerButton_9)
        self.pushButton_7.clicked.connect(self.handlerButton_7)
        self.pushButton_10.clicked.connect(self.handlerButton_10)

    def handlerButton_3(self):
        if self.lineEdit_3.text() != '':
            self.duration = float(self.lineEdit_7.text())
            self.sampleRate = float(self.lineEdit_9.text())
            self.N = int(self.duration * self.sampleRate)
            self.X = np.linspace(0, self.duration, self.N, endpoint=False)
            self.Y = np.array([float(eval(self.lineEdit_3.text())) for x in self.X]) # sin(x)+0.3*sin(50*x)+0.7*sin(150*x)
        elif self.lineEdit_4.text() != '':
            f = open(self.lineEdit_4.text(), 'r')
            tempX = list()
            tempY = list()

            for line in f:
                tempX += [float(line.strip().split()[0])]
                tempY += [float(line.strip().split()[1])]
            f.close()

            self.X = np.array(tempX)
            self.Y = np.array(tempY)
        else:
            msg = QMessageBox()
            msg.setWindowTitle("Ошибка!")
            msg.setText("Вы не ввели данные, приложение будет завершено")
            msg.setIcon(QMessageBox.Warning)
            msg.exec_()
            exit(-1)


            self.sampleRate = int(1 / (self.X[1] - self.X[0]))
            self.duration = int(self.X[-1] + (self.X[1] - self.X[0]))
            self.N = int(self.duration * self.sampleRate)

        # print(self.X, self.Y)
        self.sc1.axes.cla()
        self.sc1.axes.plot(self.X, self.Y)
        self.sc1.draw()

    def handlerButton_8(self):
        f = open('function.txt', 'w+')

        # print(len(self.X), len(self.Y))
        # assert self.X != self.Y

        print(*(f.write(str(i1) + ' ' + str(i2) + '\n') for i1, i2 in zip(self.X, self.Y)))
        f.close()

    def handlerButton_11(self):
        self.Yif = irfft(self.Yf)
        self.Xif = self.X

        # print(self.X, self.Y)
        self.sc2.axes.cla()
        self.sc2.axes.plot(self.Xif, self.Yif)
        self.sc2.draw()

    def handlerButton_4(self):
        # self.normalizedY = np.int16((self.Y / self.Y.max()) * 32767)
        self.Yf = rfft(self.Y)
        self.Xf = rfftfreq(self.N, 1 / self.sampleRate)

        if self.lineEdit_5.text() != '':

            start = int(int(self.lineEdit_5.text().split('-')[0]) * len(self.Xf) / (self.sampleRate / 2))
            end = int(int(self.lineEdit_5.text().split('-')[1]) * len(self.Xf) / (self.sampleRate / 2))
            print(start, end)
            self.Yf[start:end] = int(self.lineEdit_6.text())
            print('Yf has been changed')
            # print('Xf', len(self.Xf), self.Xf)

        # print(self.X, self.Y)
        self.sc2.axes.cla()
        self.sc2.axes.plot(self.Xf, np.abs(self.Yf))
        self.sc2.draw()

    def handlerButton_9(self):
        f = open('FFTOfFunction.txt', 'w+')

        # print(len(self.X), len(self.Y))
        # assert self.X != self.Y

        print(*(f.write(str(i1) + ' ' + str(i2) + '\n') for i1, i2 in zip(self.Xf, self.Yf)))
        f.close()

    def handlerButton_7(self):
        self.Xw = self.X
        self.Yw = self.Y

        if self.lineEdit_8.text() != '':
            # print('Before', self.Xw, self.Yw)
            self.Xw, self.Yw = self.meanWindows(self.Xw, self.Yw, int(self.lineEdit_8.text()))
            # print('After', self.Xw, self.Yw)
            print('Sizes', len(self.Xw), len(self.Yw))

        self.label_9.setText('Дисперсия = ' + str(round(np.var(self.Yw), 2)))
        self.label_7.setText('Мат ожидание = ' + str(round(np.mean(self.Yw), 2)))

        # print(self.X, self.Y)
        self.sc3.axes.cla()
        self.sc3.axes.plot(self.Xw, self.Yw)
        self.sc3.draw()

    def handlerButton_10(self):
        f = open('meanWindowFunction.txt', 'w+')

        # print(len(self.X), len(self.Y))
        # assert self.X != self.Y

        print(*(f.write(str(i1) + ' ' + str(i2) + '\n') for i1, i2 in zip(self.Xw, self.Yw)))
        f.close()

    def meanWindows(self, x, y, dx):
        count = len(y) - dx + 1
        arr = np.zeros(count)
        for i in range(count):
            for j in range(dx):
                arr[i] += y[i + j]
        arr[i] /= dx

        return (x[:-dx + 1], arr)



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
